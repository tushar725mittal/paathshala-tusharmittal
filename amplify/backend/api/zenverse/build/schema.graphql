type JobSeeker @aws_iam @aws_api_key {
  id: ID!
  name: String!
  email: String!
  phone: String!
  jobTitle: String!
  jobType: String!
  comments: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelJobSeekerConnection @aws_api_key @aws_iam {
  items: [JobSeeker]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelJobSeekerFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  email: ModelStringInput
  phone: ModelStringInput
  jobTitle: ModelStringInput
  jobType: ModelStringInput
  comments: ModelStringInput
  and: [ModelJobSeekerFilterInput]
  or: [ModelJobSeekerFilterInput]
  not: ModelJobSeekerFilterInput
  _deleted: ModelBooleanInput
}

type Query {
  getJobSeeker(id: ID!): JobSeeker @aws_api_key @aws_iam
  listJobSeekers(filter: ModelJobSeekerFilterInput, limit: Int, nextToken: String): ModelJobSeekerConnection @aws_api_key @aws_iam
  syncJobSeekers(filter: ModelJobSeekerFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelJobSeekerConnection @aws_api_key @aws_iam
}

input ModelJobSeekerConditionInput {
  name: ModelStringInput
  email: ModelStringInput
  phone: ModelStringInput
  jobTitle: ModelStringInput
  jobType: ModelStringInput
  comments: ModelStringInput
  and: [ModelJobSeekerConditionInput]
  or: [ModelJobSeekerConditionInput]
  not: ModelJobSeekerConditionInput
  _deleted: ModelBooleanInput
}

input CreateJobSeekerInput {
  id: ID
  name: String!
  email: String!
  phone: String!
  jobTitle: String!
  jobType: String!
  comments: String!
  _version: Int
}

input UpdateJobSeekerInput {
  id: ID!
  name: String
  email: String
  phone: String
  jobTitle: String
  jobType: String
  comments: String
  _version: Int
}

input DeleteJobSeekerInput {
  id: ID!
  _version: Int
}

type Mutation {
  createJobSeeker(input: CreateJobSeekerInput!, condition: ModelJobSeekerConditionInput): JobSeeker @aws_api_key @aws_iam
  updateJobSeeker(input: UpdateJobSeekerInput!, condition: ModelJobSeekerConditionInput): JobSeeker @aws_api_key @aws_iam
  deleteJobSeeker(input: DeleteJobSeekerInput!, condition: ModelJobSeekerConditionInput): JobSeeker @aws_api_key @aws_iam
}

input ModelSubscriptionJobSeekerFilterInput {
  id: ModelSubscriptionIDInput
  name: ModelSubscriptionStringInput
  email: ModelSubscriptionStringInput
  phone: ModelSubscriptionStringInput
  jobTitle: ModelSubscriptionStringInput
  jobType: ModelSubscriptionStringInput
  comments: ModelSubscriptionStringInput
  and: [ModelSubscriptionJobSeekerFilterInput]
  or: [ModelSubscriptionJobSeekerFilterInput]
  _deleted: ModelBooleanInput
}

type Subscription {
  onCreateJobSeeker(filter: ModelSubscriptionJobSeekerFilterInput): JobSeeker @aws_subscribe(mutations: ["createJobSeeker"]) @aws_api_key @aws_iam
  onUpdateJobSeeker(filter: ModelSubscriptionJobSeekerFilterInput): JobSeeker @aws_subscribe(mutations: ["updateJobSeeker"]) @aws_api_key @aws_iam
  onDeleteJobSeeker(filter: ModelSubscriptionJobSeekerFilterInput): JobSeeker @aws_subscribe(mutations: ["deleteJobSeeker"]) @aws_api_key @aws_iam
}
